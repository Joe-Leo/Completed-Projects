{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Untitled\"\nauthor: \"Joseph Leong, Sam Whittaker, Ryan Isherwood\"\ndate: \"November 10, 2016\"\noutput: html_document\n---\n\nData Import \n```{r, echo = F}\nlibrary(forecast)\nlibrary(astsa)\nlibrary(tseries)\n#load Data set\nAAPL = read.csv(\"AAPL-NASDAQ-10Y.csv\", header = T)\n#check first/ last values, and data type\nhead(AAPL)\ntail(AAPL)\nsapply(AAPL, typeof)\n#converte dates into Date objects, corrects for todays date as well\nAAPL$date=as.Date(format(AAPL$date),format = \"%Y/%m/%d\")\nAAPL$date[1] = as.Date('2016/11/10')\n\n#reorder data from oldest to newest\nAAPL$date = rev(AAPL$date)\nAAPL$close = rev(AAPL$close)\nAAPL$volume = rev(AAPL$volume)\nAAPL$open = rev(AAPL$open)\nAAPL$high = rev(AAPL$high)\nAAPL$low = rev(AAPL$low)\n\nhead(AAPL)\ntail(AAPL)\n\n#create mean pricing between open and close\nAAPL$mean=(AAPL$close+AAPL$open)/2\n\n#create time series object (Yearly) \ntable(format(AAPL$date,'%Y')) # how many obs in each year\n\nAAPL.ts =  ts(AAPL$mean, start=c(2006,217), frequency = 252) # need to correct the frequency and start date\nts.plot(AAPL.ts)\nplot(AAPL$date, AAPL$mean, xlab = \"Year\", ylab = \"AAPL Average Price\", main = \"Performance of AAPL over a 10 year cycle\", type=\"l\")\ntime(AAPL.ts)\nhead(time(AAPL.ts))\n#check if dataset matches up\nhead(AAPL.ts)\nhead(AAPL$mean)\ntail(AAPL.ts)\ntail(AAPL$mean)\n```\n\nDetermine if seasonality exist with iphone releaese\n```{r}\n#iphone\na = AAPL[AAPL$date == \"2007-06-29\",]\n#iphone3g\nb = AAPL[AAPL$date == \"2008-07-11\",]\n#iphone3gs\nc = AAPL[AAPL$date == \"2009-06-19\",]\n#iphone4\nd = AAPL[AAPL$date == \"2010-06-24\",]\n#iphone4s\ne = AAPL[AAPL$date == \"2011-10-14\",]\n#iphone5\nf = AAPL[AAPL$date == \"2012-09-21\",]\n#iphone5c/s\ng = AAPL[AAPL$date == \"2013-09-20\",]\n#iphone6\nh = AAPL[AAPL$date == \"2014-09-19\",]\n#iphone6s\ni = AAPL[AAPL$date == \"2015-09-25\",]\n#iphonese\nj = AAPL[AAPL$date == \"2016-03-31\",]\n#iphone7\nk = AAPL[AAPL$date == \"2016-09-16\",]\n\nIphone = rbind(a,b,c,d,e,f,g,h,i,j,k)\nremove(a,b,c,d,e,f,g,h,i,j,k)\n\n#Plots Price\nplot(AAPL$date, AAPL$mean, xlab = \"Year\", ylab = \"AAPL Average Price\", main = \"Performance of AAPL over a 10 year cycle\", type=\"l\")\npoints(Iphone$date,Iphone$mean, col = \"red\", pch = 22)\n```\n\n####Time Series Part\n```{r}\nndiffs(AAPL.ts)\nsummary(AAPL.ts)\nAcf(AAPL.ts, lag.max = 2519, main = \"ACF of Untransformed AAPL Data\")\nPacf(AAPL.ts,lag.max = 2519, ylim =c(-.07,.07), main = \"PACF of Untransformed AAPL Data\")\n#clearly non stationary, non normal\n```\n\n```{r}\n#try log model\nAAPL.ts.log = log(AAPL.ts)\nplot.ts(AAPL.ts.log, main =\"Log of Daily Average AAPL Price over 10 Years\")\nAcf(AAPL.ts.log, lag.max = 2519, main=\"ACF of Log Transformed AAPL Data\")\nPacf(AAPL.ts.log, lag.max = 2519, ylim =c(-0.07,0.07), main = \"PACF of Log Transformed AAPL Data\")\n```\n\n```{r}\n#try Log diff model\nAAPL.ts.logdiff = diff(log(AAPL.ts ))\nplot.ts(AAPL.ts.logdiff, main= \"Log Difference of Daily Average Price \\n of AAPL over 10 Years\")\nAcf(AAPL.ts.logdiff, lag.max = 2518,ylim=c(-0.1, 0.1), main = \"ACF of Growth Rate of AAPL Data\")\nPacf(AAPL.ts.logdiff, lag.max = 2518,ylim =c(-.07,.07),main =\"PACF of Growth Rate of AAPL Data\")\n#this looks better\n\ntemp = stl(AAPL.ts.logdiff, \"per\")\nplot(temp)\n```\n\n```{r}\n#model Selection (USE LOG DATA and LET ARIMA DO THE DIFFERENCE, otherwise we have to standardize the residuals between sarima and arima)\nsarima(AAPL.ts.log, 0,1,1)\nsarima(AAPL.ts.log, 0,0,1)\nsarima(AAPL.ts.log, 5,1,5)\n\nadf.test(AAPL$mean)\nadf.test(AAPL.ts.log)\n\n#using auto.arima, best models according to AIC is (0,0,1) or (0,1,1) if we dont difference \nmodel.1 = auto.arima(AAPL.ts.log, approximation = F, trace = F)\nmodel.1\n\n#SIDE NOTE\n#make sure we are looking at the same AIC values\nsarima(AAPL.ts.logdiff, 0,0,1, no.constant = T)\nsarima(AAPL.ts.log, 0,1,1, no.constant = T)\narima(AAPL.ts.log, c(0,1,1))\narima(AAPL.ts.logdiff, c(0,0,1), include.mean = F)\n#the AIC extracted from SARIMA is not the same as AIC from arima, but it contains it\n\n#check if this is the case where (0,1,1) is best model\nmod =data.frame()\nfor(i in 0:6)\n{\n  for(j in 0:4)\n  {\n    c = arima(AAPL.ts.log, c(i,1,j), include.mean = F)\n    d = c$aic\n    se = c$sigma2\n    r = cbind(i,1,j,d,se)\n    mod = rbind(mod,r)\n  }\n}\nmod\nmin(mod$d)\nmin(mod$se)\nmod[mod$se == min(mod$se),]\n\n#good models Supposedly\nsarima(AAPL.ts.log, 0,1,1, no.constant = T, details = F)\n\nsarima(AAPL.ts.log, 2,1,3, no.constant = T, details = T)\n\nsarima(AAPL.ts.log, 5,1,5, no.constant = T, details = F)\nsarima(AAPL.ts.log, 8,1,4, no.constant = T, details = F)\ntsdiag(arima(AAPL.ts.log, c(0,1,1), include.mean = F))\ntsdiag(arima(AAPL.ts.log, c(2,1,3), include.mean = F))\ntsdiag(arima(AAPL.ts.log, c(5,1,5), include.mean = F))\ntsdiag(arima(AAPL.ts.log, c(8,1,4), include.mean = F))\n\nsarima(AAPL.ts.log, 6,1,4, no.constant = T, details = T)\ntsdiag(arima(AAPL.ts.log, c(6,1,4), include.mean = F))\n\nsarima(AAPL.ts.log, 6,1,2, no.constant = T, details = T)\ntsdiag(arima(AAPL.ts.log, c(6,1,2), include.mean = F))\n\n\n```\n\nGarch \n```{r}\nlibrary(fBasics)\nlibrary(MASS)\nlibrary(fGarch)\n\n#model 1\nAAPL.g = garchFit(~arma(0,1)+garch(1,1), diff(AAPL.ts.log), include.mean = F, trace=F)\nAAPL.g\nsummary(AAPL.g)\nplot(residuals(AAPL.g))\n\n#model 2\nAAPL.g1 = garchFit(~arma(2,3)+garch(1,1), diff(AAPL.ts.log), include.mean = F, trace=F)\nAAPL.g1\nsummary(AAPL.g1)\nplot(residuals(AAPL.g1))\n\n#model 3\nAAPL.g2 = garchFit(~arma(5,5)+garch(1,1), diff(AAPL.ts.log), include.mean = F, trace=F)\nAAPL.g2\nsummary(AAPL.g2)\nplot(residuals(AAPL.g2))\n\n#model 4\nAAPL.g3 = garchFit(~arma(8,4)+garch(1,1), diff(AAPL.ts.log), include.mean = F, trace=F)\nAAPL.g3\nsummary(AAPL.g3)\nplot(residuals(AAPL.g3))\n\n#model 5\nAAPL.g4 = garchFit(~arma(6,4)+garch(1,1), diff(AAPL.ts.log), include.mean = F, trace=F)\nAAPL.g4\nsummary(AAPL.g4)\nplot(residuals(AAPL.g4))\n\n```\nForcasting(this part i cant figure out how to restore the drift)\n```{r}\npred = predict(arima(AAPL.ts.log, c(6,1,4), include.mean = T),n.ahead = 10)\nexp(pred$pred)\nts.plot(AAPL.ts, exp(pred$pred), col = c(\"black\",\"red\"), lty = c(1,2), log = \"y\", xlim = c(2016.8,2016.94))\n\nsarima.for(AAPL.ts.log,n.ahead=10, 6,1,4, no.constant=F)\ntemp=sarima.for(AAPL.ts,n.ahead=10, 6,1,4, no.constant=F)\n\ntemp\n\nts.plot(AAPL.ts, temp$pred, col = c(\"black\",\"red\"), lty = c(1,2), log = \"y\", xlim = c(2016.8,2016.94), ylim = c(100,120), main = \"10 day Prediction of Daily AAPL Average Price\", ylab=\"$/share\")\nlines(temp$pred+2*temp$se, col=\"blue\")\nlines(temp$pred-2*temp$se, col=\"blue\")\nts.plot(AAPL.ts, temp$pred, col = c(\"black\",\"red\"), lty = c(1,2), log = \"y\", xlim = c(2016.8,2016.94), ylim = c(109,111), main = \"10 day Prediction of Daily AAPL Average Price\", ylab=\"$/share\")\nts.plot(AAPL.ts, temp$pred, col = c(\"black\",\"red\"), lty = c(1,2), log = \"y\", main = \"10 day Prediction of Daily AAPL Average Price\",ylab=\"$/share\")\nlines(temp$pred+2*temp$se, col=\"blue\")\nlines(temp$pred-2*temp$se, col=\"blue\")\n\n\n\n#as ryan said, garch prediction dosnt work well, still trying to figure this out\npred2 = predict(AAPL.g1, n.ahead = 10)\nexp(pred2$meanForecast)\n\n```\n\nHow Good is our prediction?\n```{r}\n#grab the 10 dates\nAAPL10 = read.csv(\"AAPL-NASDAQ-10YNOV27.csv\", header = T)\nAAPL10$date=as.Date(format(AAPL10$date),format = \"%Y/%m/%d\")\nAAPL10 = subset(AAPL10, AAPL10$date > \"2016-11-10\")\nhead(AAPL10)\ntail(AAPL10)\nsapply(AAPL10, typeof)\n\n#reverse everything\nAAPL10$date = rev(AAPL10$date)\nAAPL10$close = rev(AAPL10$close)\nAAPL10$volume = rev(AAPL10$volume)\nAAPL10$open = rev(AAPL10$open)\nAAPL10$high = rev(AAPL10$high)\nAAPL10$low = rev(AAPL10$low)\n\nAAPL10$mean = (AAPL10$close + AAPL10$open)/2\n\ntab=cbind(temp$pred,temp$se, AAPL10$mean)\nrownames(tab) = AAPL10$date\ntab\n```\n\n",
    "created" : 1480280992444.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1001130851",
    "id" : "F587B5F7",
    "lastKnownWriteTime" : 1480290381,
    "last_content_update" : 1480290381946,
    "path" : "//home.uvic.ca/joeleo/Desktop/STATS 457 - Project/testing.rmd",
    "project_path" : "testing.rmd",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}